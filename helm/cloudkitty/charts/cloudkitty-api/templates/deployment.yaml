apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudkitty-api.fullname" . }}
  labels:
{{ include "cloudkitty-api.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cloudkitty-api.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cloudkitty-api.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8889
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
            - name: workdir
              mountPath: /etc/cloudkitty
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
      - name: init-secrets
        image: busybox:1.28
        command: ['sh', '-c', 'cp /etc/cloudkitty-config/* /etc/cloudkitty/; for i in /etc/cloudkitty-secret/*; do pass=$(cat $i); i="$"${i##*/}; sed -i "s/$i/$pass/" /etc/cloudkitty/cloudkitty.conf; done;']
        volumeMounts:
          - name: config-volume
            mountPath: /etc/cloudkitty-config
          - name: secret-ck
            mountPath: /etc/cloudkitty-secret
          - name: workdir
            mountPath: /etc/cloudkitty
      - name: init-sql
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup {{ .Values.config.credentials.sql.host }}; do echo waiting for SQL; sleep 2; done;"]
      - name: init-timeseries
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup {{ .Values.config.credentials.timeseries.host }}; do echo waiting for TIMESERIES; sleep 2; done;"]
      - name: init-amqp
        image: busybox:1.28
        command: ['sh', '-c', "until nslookup {{ .Values.config.credentials.amqp.host }}; do echo waiting for AMQP; sleep 2; done;"]
      - name: init-db-storage
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ['sh', '-c', 'cloudkitty-storage-init && cloudkitty-dbsync upgrade']
        volumeMounts:
          - name: workdir
            mountPath: /etc/cloudkitty
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.config.name }}
        - name: workdir
          emptyDir: {}
        - name: secret-ck
          secret:
            secretName: {{ .Values.secret.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
